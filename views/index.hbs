<h1>What would you like to search for?</h1>

<form id="search">

    <input type="text" placeholder="Enter terms, phrases and tags to search for..."/>
    <input type="submit" value="Search"/>

</form>

<div id="resultsContainer" data-active="false">
    <h2>Results</h2>

    <div id="resultsWrapper">
    
        <div id="frames" class="resultsList">
            <h3>Keyframes</h3>
            <ol>
                <li></li>
            </ol>
        </div>

        <div id="transcriptions" class="resultsList">
            <h3>Transcriptions</h3>
            <ol>
                <li></li>
            </ol>
        </div>
    
    </div>

</div>

<div id="overlay" data-active="false">
    <div id="frameData">
    </div>
</div>

<script>

    (function(){

        'use strict';

        const searchForm = document.querySelector('#search');
        const resultsContainer = document.querySelector('#resultsContainer');
        const framesContainer = document.querySelector('#resultsContainer #frames');
        const transcriptContainer = document.querySelector('#resultsContainer #transcriptions');

        const overlayElement = document.querySelector('#overlay');
        const overlayContent = overlayElement.querySelector('#frameData');

        function generateTimestamps(time){
            return `${ time.hours < 10 ? '0' + time.hours : time.hours }:${time.minutes < 10 ? '0' + time.minutes : time.minutes}:${time.seconds < 10 ? '0' + time.seconds : time.seconds}`;
        }

        searchForm.addEventListener('submit', function(e){
            
            e.preventDefault();
            e.stopImmediatePropagation();

            console.log(this[0].value);

            fetch('/search', {
                    method : "POST",
                    headers : {
                        "Content-Type" : "application/json"
                    },
                    body : JSON.stringify( { searchTerm : this[0].value } )
                })
                .then(function(res){
                    if(res.ok){
                        return res.json();
                    } else {
                        throw res;
                    }
                })
                .then(function(response){
                    console.log(response.data);
                    const data = response.data;
                    
                    const framesList = framesContainer.querySelector('ol')
                    const transcriptList = transcriptContainer.querySelector('ol')
                    
                    framesList.innerHTML = "";
                    transcriptList.innerHTML = "";

                    Object.keys(data).forEach(key => {

                        const framesFragment = document.createDocumentFragment();
                        const transcriptFragment = document.createDocumentFragment();

                        const framesHTML = data[key].frames.forEach(frame => {

                            const li = document.createElement('li');
                            const img = document.createElement('img');

                            li.dataset.timeoffset = frame.keyframeTimeoffset;
                            li.dataset.source = frame.parent;
                            img.setAttribute('src', `/keyframe/${frame.uuid}.jpg`);

                            li.addEventListener('click', function(){
                                console.log(this);
                                console.log(frame);
                                
                                overlayContent.innerHTML = "";
                                
                                const overlayFragment = document.createDocumentFragment();
                                const image = document.createElement('img');
                                const properties = document.createElement('ol');

                                image.setAttribute('src', `/keyframe/${frame.uuid}.jpg`);

                                frame.analysis.forEach(classification => {
                                    const li = document.createElement('li');
                                    const name = document.createElement('span');
                                    const value = document.createElement('span');

                                    name.textContent = classification.class;
                                    value.textContent = `${classification.score * 100}%`;

                                    li.appendChild(name);
                                    li.appendChild(value);

                                    properties.appendChild(li);

                                });

                                const closeBtn = document.createElement('button');
                                closeBtn.classList.add('closeBtn')
                                closeBtn.textContent = 'Close';

                                closeBtn.addEventListener('click', function(){
                                    overlayElement.dataset.active = "false";
                                }, false);

                                overlayFragment.appendChild(image);
                                overlayFragment.appendChild(properties);
                                overlayFragment.appendChild(closeBtn);

                                overlayContent.appendChild(overlayFragment);

                                overlayElement.dataset.active = 'true';

                            }, false);

                            li.appendChild(img);
                            framesFragment.appendChild(li);

                        });

                        if(data[key].transcript.length > 0){

                            const keySpan = document.createElement('span');
                            keySpan.classList.add('key');
                            keySpan.textContent = key;
                            
                            transcriptFragment.appendChild(keySpan);

                            data[key].transcript.map(chunk => {
                                const li = document.createElement('li');
                                const timingSpan = document.createElement('span');
                                const transcription = document.createElement('p');
                                
                                li.dataset.start = JSON.stringify(chunk.start);
                                li.dataset.end = JSON.stringify(chunk.end);

                                timingSpan.classList.add('timings');
                                timingSpan.textContent = `${generateTimestamps(chunk.start)} --> ${generateTimestamps(chunk.end)}`

                                transcription.textContent = chunk.text;

                                li.appendChild(timingSpan);
                                li.appendChild(transcription);

                                li.addEventListener('click', function(){
                                    console.log(this);
                                }, false);

                                transcriptFragment.appendChild(li);

                            });        

                        }
                        
                        framesList.appendChild(framesFragment);
                        transcriptList.appendChild(transcriptFragment);

                    });

                    resultsContainer.dataset.active = "true";

                })
                .catch(function(err){
                    console.log('Search err:', err);
                })

        }, false);

    }());

</script>